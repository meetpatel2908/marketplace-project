generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  SELLER
  USER
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String
  role     Role   @default(USER) // Restricts to 'ADMIN', 'SELLER', or 'USER'

  // Relationship with Product (A seller can have multiple products)
  products Product[]
  Cart     Cart[]
  Shipment Shipment?
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  price       Float
  condition   String // 'New' or 'Used'
  description String
  image       String? // Store image filename or URL
  createdAt   DateTime @default(now())

  category    String   @default("uncategorized") // âœ… Default value added

  sellerId Int
  seller   User   @relation(fields: [sellerId], references: [id], onDelete: Cascade)
  Cart     Cart[]
}

model Cart {
  id        Int     @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
  quantity  Int     @default(1)
}


model Contact {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  subject   String
  message   String
  createdAt DateTime @default(now())
}

model Message {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  message   String
  userRole  Role // ðŸ”¥ Changed to ENUM
  createdAt DateTime @default(now())
}

model Shipment {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique // Ensure this is Int, not String
  address   String
  city      String
  pincode   String
  landmark  String?
  phone     String
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
